/* 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 * Author:  shdwk
 * Created: May 14, 2020
 */
-- CONNECT TO DATABASE
--CONNECT 'jdbc:derby://localhost:1527/%DERBY_DB_HOME%/FuelEcoService;create=true;user=DMK;password=pDaMsKs';

AUTOCOMMIT OFF;

--------------------------------------------------------
-- REMOVE TABLES IF THEY EXIST
--IF EXISTS VEHICLE_FUEL_TABLE THEN 
DROP TABLE VEHICLE_FUEL_TABLE;
--IF EXISTS FUEL_EVENT THEN 
DROP TABLE FUEL_EVENT;
--IF EXISTS VEHICLE_TABLE THEN 
DROP TABLE VEHICLE_TABLE;

--------------------------------------------------------
-- TABLE TO HOLD VEHICLE SPECIFIC DATA
CREATE TABLE VEHICLE_TABLE (
    VIN CHAR(17) NOT NULL,
    MODEL_YEAR SMALLINT NOT NULL,
    MAKER VARCHAR(20) NOT NULL,
    MODEL_NAME VARCHAR(20) NOT NULL,
    TRIM_LEVEL VARCHAR(8) DEFAULT 'BASE',
    CURRENT_ODO INTEGER NOT NULL,
    TIRE_SIZE CHAR(9),
    DISPLAY_NAME VARCHAR(50) NOT NULL,
    IS_ACTIVE BOOLEAN NOT NULL DEFAULT TRUE
);

ALTER TABLE VEHICLE_TABLE
    ADD CONSTRAINT VIN_PK PRIMARY KEY (VIN);

----------------------------------------------------------
-- TABLE TO HOLD RE-FUELING EVENT DATA
CREATE TABLE FUEL_EVENT (
    EVENT_TIME TIMESTAMP NOT NULL,
    ODOMETER INTEGER NOT NULL,
    TOTAL_PRICE DOUBLE NOT NULL,
    NUM_GAL DOUBLE NOT NULL,
    IS_FULL_TANK BOOLEAN NOT NULL DEFAULT TRUE
);

ALTER TABLE FUEL_EVENT
    ADD CONSTRAINT EVENT_TIME_PK PRIMARY KEY (EVENT_TIME);

-----------------------------------------------------------
-- LINK VEHICLE_TABLE AND FUEL_EVENT
CREATE TABLE VEHICLE_FUEL_TABLE (
    VIN CHAR(17) NOT NULL,
    EVENT_TIME TIMESTAMP NOT NULL
);

ALTER TABLE VEHICLE_FUEL_TABLE
    ADD CONSTRAINT VIN_FK 
    FOREIGN KEY (VIN) REFERENCES VEHICLE_TABLE (VIN);

ALTER TABLE VEHICLE_FUEL_TABLE
    ADD CONSTRAINT EVENT_TIME_FK
    FOREIGN KEY (EVENT_TIME) REFERENCES FUEL_EVENT (EVENT_TIME);

------------------------------------------------------------
-- CREATE DATA MANAGEMENT TRIGGER EVENTS

-- WHEN ADDING A NEW FUEL_EVENT AND LINKING IT TO THE VEHICLE_FUEL_TABLE
-- CHECK TO MAKE SURE THAT THE FIELD VEHICLE_TABLE.CURRENT_ODO HAS THE CORRECT
-- VALUE (IE. THE HIGHEST MILEAGE FROM THE FUEL_EVENT TABLE FOR THAT VEHICLE)
CREATE TRIGGER NEW_VEHICLE_FUEL_EVENT AFTER INSERT ON VEHICLE_FUEL_TABLE
    REFERENCING NEW AS N
    FOR EACH ROW
        WHEN ((SELECT ODOMETER FROM FUEL_EVENT WHERE (EVENT_TIME = N.EVENT_TIME)) 
            > (SELECT CURRENT_ODO FROM VEHICLE_TABLE WHERE (VIN = N.VIN)))
        UPDATE VEHICLE_TABLE SET CURRENT_ODO = (SELECT ODOMETER FROM FUEL_EVENT F WHERE F.EVENT_TIME = N.EVENT_TIME)
            WHERE (VIN = N.VIN);
         
------------------------------------------------------------
COMMIT;
AUTOCOMMIT ON;
